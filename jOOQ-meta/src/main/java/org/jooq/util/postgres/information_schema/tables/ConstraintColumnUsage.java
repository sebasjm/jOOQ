/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.postgres.information_schema.InformationSchema;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConstraintColumnUsage extends TableImpl<Record> {

	private static final long serialVersionUID = -1833497305;

	/**
	 * The reference instance of <code>information_schema.constraint_column_usage</code>
	 */
	public static final ConstraintColumnUsage CONSTRAINT_COLUMN_USAGE = new ConstraintColumnUsage();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>information_schema.constraint_column_usage.table_catalog</code>.
	 */
	public final TableField<Record, String> TABLE_CATALOG = createField("table_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.table_schema</code>.
	 */
	public final TableField<Record, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.table_name</code>.
	 */
	public final TableField<Record, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.column_name</code>.
	 */
	public final TableField<Record, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.constraint_catalog</code>.
	 */
	public final TableField<Record, String> CONSTRAINT_CATALOG = createField("constraint_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.constraint_schema</code>.
	 */
	public final TableField<Record, String> CONSTRAINT_SCHEMA = createField("constraint_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>information_schema.constraint_column_usage.constraint_name</code>.
	 */
	public final TableField<Record, String> CONSTRAINT_NAME = createField("constraint_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>information_schema.constraint_column_usage</code> table reference
	 */
	public ConstraintColumnUsage() {
		this("constraint_column_usage", null);
	}

	/**
	 * Create an aliased <code>information_schema.constraint_column_usage</code> table reference
	 */
	public ConstraintColumnUsage(String alias) {
		this(alias, CONSTRAINT_COLUMN_USAGE);
	}

	private ConstraintColumnUsage(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ConstraintColumnUsage(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, InformationSchema.INFORMATION_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintColumnUsage as(String alias) {
		return new ConstraintColumnUsage(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConstraintColumnUsage rename(String name) {
		return new ConstraintColumnUsage(name, null);
	}
}
