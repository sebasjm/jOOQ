/**
 * This class is generated by jOOQ
 */
package org.jooq.example.chart.db;


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.example.chart.db.tables.Actor;
import org.jooq.example.chart.db.tables.ActorInfo;
import org.jooq.example.chart.db.tables.Address;
import org.jooq.example.chart.db.tables.Category;
import org.jooq.example.chart.db.tables.City;
import org.jooq.example.chart.db.tables.Country;
import org.jooq.example.chart.db.tables.Customer;
import org.jooq.example.chart.db.tables.CustomerList;
import org.jooq.example.chart.db.tables.Film;
import org.jooq.example.chart.db.tables.FilmActor;
import org.jooq.example.chart.db.tables.FilmCategory;
import org.jooq.example.chart.db.tables.FilmInStock;
import org.jooq.example.chart.db.tables.FilmList;
import org.jooq.example.chart.db.tables.FilmNotInStock;
import org.jooq.example.chart.db.tables.Inventory;
import org.jooq.example.chart.db.tables.Language;
import org.jooq.example.chart.db.tables.NicerButSlowerFilmList;
import org.jooq.example.chart.db.tables.Payment;
import org.jooq.example.chart.db.tables.PaymentP2007_01;
import org.jooq.example.chart.db.tables.PaymentP2007_02;
import org.jooq.example.chart.db.tables.PaymentP2007_03;
import org.jooq.example.chart.db.tables.PaymentP2007_04;
import org.jooq.example.chart.db.tables.PaymentP2007_05;
import org.jooq.example.chart.db.tables.PaymentP2007_06;
import org.jooq.example.chart.db.tables.Rental;
import org.jooq.example.chart.db.tables.RewardsReport;
import org.jooq.example.chart.db.tables.SalesByFilmCategory;
import org.jooq.example.chart.db.tables.SalesByStore;
import org.jooq.example.chart.db.tables.SchemaVersion;
import org.jooq.example.chart.db.tables.Staff;
import org.jooq.example.chart.db.tables.StaffList;
import org.jooq.example.chart.db.tables.Store;
import org.jooq.example.chart.db.tables.records.FilmInStockRecord;
import org.jooq.example.chart.db.tables.records.FilmNotInStockRecord;
import org.jooq.example.chart.db.tables.records.RewardsReportRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0",
        "schema version:public_2",
    },
    date = "2016-06-30T15:44:15.143Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 776864981;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.actor</code>.
     */
    public final Actor ACTOR = org.jooq.example.chart.db.tables.Actor.ACTOR;

    /**
     * The table <code>public.actor_info</code>.
     */
    public final ActorInfo ACTOR_INFO = org.jooq.example.chart.db.tables.ActorInfo.ACTOR_INFO;

    /**
     * The table <code>public.address</code>.
     */
    public final Address ADDRESS = org.jooq.example.chart.db.tables.Address.ADDRESS;

    /**
     * The table <code>public.category</code>.
     */
    public final Category CATEGORY = org.jooq.example.chart.db.tables.Category.CATEGORY;

    /**
     * The table <code>public.city</code>.
     */
    public final City CITY = org.jooq.example.chart.db.tables.City.CITY;

    /**
     * The table <code>public.country</code>.
     */
    public final Country COUNTRY = org.jooq.example.chart.db.tables.Country.COUNTRY;

    /**
     * The table <code>public.customer</code>.
     */
    public final Customer CUSTOMER = org.jooq.example.chart.db.tables.Customer.CUSTOMER;

    /**
     * The table <code>public.customer_list</code>.
     */
    public final CustomerList CUSTOMER_LIST = org.jooq.example.chart.db.tables.CustomerList.CUSTOMER_LIST;

    /**
     * The table <code>public.film</code>.
     */
    public final Film FILM = org.jooq.example.chart.db.tables.Film.FILM;

    /**
     * The table <code>public.film_actor</code>.
     */
    public final FilmActor FILM_ACTOR = org.jooq.example.chart.db.tables.FilmActor.FILM_ACTOR;

    /**
     * The table <code>public.film_category</code>.
     */
    public final FilmCategory FILM_CATEGORY = org.jooq.example.chart.db.tables.FilmCategory.FILM_CATEGORY;

    /**
     * The table <code>public.film_in_stock</code>.
     */
    public final FilmInStock FILM_IN_STOCK = org.jooq.example.chart.db.tables.FilmInStock.FILM_IN_STOCK;

    /**
     * Call <code>public.film_in_stock</code>.
     */
    public static Result<FilmInStockRecord> FILM_IN_STOCK(Configuration configuration, Integer pFilmId, Integer pStoreId) {
        return DSL.using(configuration).selectFrom(FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId)).fetch();
    }

    /**
     * Get <code>public.film_in_stock</code> as a table.
     */
    public static FilmInStock FILM_IN_STOCK(Integer pFilmId, Integer pStoreId) {
        return FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Get <code>public.film_in_stock</code> as a table.
     */
    public static FilmInStock FILM_IN_STOCK(Field<Integer> pFilmId, Field<Integer> pStoreId) {
        return FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * The table <code>public.film_list</code>.
     */
    public final FilmList FILM_LIST = org.jooq.example.chart.db.tables.FilmList.FILM_LIST;

    /**
     * The table <code>public.film_not_in_stock</code>.
     */
    public final FilmNotInStock FILM_NOT_IN_STOCK = org.jooq.example.chart.db.tables.FilmNotInStock.FILM_NOT_IN_STOCK;

    /**
     * Call <code>public.film_not_in_stock</code>.
     */
    public static Result<FilmNotInStockRecord> FILM_NOT_IN_STOCK(Configuration configuration, Integer pFilmId, Integer pStoreId) {
        return DSL.using(configuration).selectFrom(FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId)).fetch();
    }

    /**
     * Get <code>public.film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock FILM_NOT_IN_STOCK(Integer pFilmId, Integer pStoreId) {
        return FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * Get <code>public.film_not_in_stock</code> as a table.
     */
    public static FilmNotInStock FILM_NOT_IN_STOCK(Field<Integer> pFilmId, Field<Integer> pStoreId) {
        return FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
    }

    /**
     * The table <code>public.inventory</code>.
     */
    public final Inventory INVENTORY = org.jooq.example.chart.db.tables.Inventory.INVENTORY;

    /**
     * The table <code>public.language</code>.
     */
    public final Language LANGUAGE = org.jooq.example.chart.db.tables.Language.LANGUAGE;

    /**
     * The table <code>public.nicer_but_slower_film_list</code>.
     */
    public final NicerButSlowerFilmList NICER_BUT_SLOWER_FILM_LIST = org.jooq.example.chart.db.tables.NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST;

    /**
     * The table <code>public.payment</code>.
     */
    public final Payment PAYMENT = org.jooq.example.chart.db.tables.Payment.PAYMENT;

    /**
     * The table <code>public.payment_p2007_01</code>.
     */
    public final PaymentP2007_01 PAYMENT_P2007_01 = org.jooq.example.chart.db.tables.PaymentP2007_01.PAYMENT_P2007_01;

    /**
     * The table <code>public.payment_p2007_02</code>.
     */
    public final PaymentP2007_02 PAYMENT_P2007_02 = org.jooq.example.chart.db.tables.PaymentP2007_02.PAYMENT_P2007_02;

    /**
     * The table <code>public.payment_p2007_03</code>.
     */
    public final PaymentP2007_03 PAYMENT_P2007_03 = org.jooq.example.chart.db.tables.PaymentP2007_03.PAYMENT_P2007_03;

    /**
     * The table <code>public.payment_p2007_04</code>.
     */
    public final PaymentP2007_04 PAYMENT_P2007_04 = org.jooq.example.chart.db.tables.PaymentP2007_04.PAYMENT_P2007_04;

    /**
     * The table <code>public.payment_p2007_05</code>.
     */
    public final PaymentP2007_05 PAYMENT_P2007_05 = org.jooq.example.chart.db.tables.PaymentP2007_05.PAYMENT_P2007_05;

    /**
     * The table <code>public.payment_p2007_06</code>.
     */
    public final PaymentP2007_06 PAYMENT_P2007_06 = org.jooq.example.chart.db.tables.PaymentP2007_06.PAYMENT_P2007_06;

    /**
     * The table <code>public.rental</code>.
     */
    public final Rental RENTAL = org.jooq.example.chart.db.tables.Rental.RENTAL;

    /**
     * The table <code>public.rewards_report</code>.
     */
    public final RewardsReport REWARDS_REPORT = org.jooq.example.chart.db.tables.RewardsReport.REWARDS_REPORT;

    /**
     * Call <code>public.rewards_report</code>.
     */
    public static Result<RewardsReportRecord> REWARDS_REPORT(Configuration configuration, Integer minMonthlyPurchases, BigDecimal minDollarAmountPurchased) {
        return DSL.using(configuration).selectFrom(RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased)).fetch();
    }

    /**
     * Get <code>public.rewards_report</code> as a table.
     */
    public static RewardsReport REWARDS_REPORT(Integer minMonthlyPurchases, BigDecimal minDollarAmountPurchased) {
        return RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
    }

    /**
     * Get <code>public.rewards_report</code> as a table.
     */
    public static RewardsReport REWARDS_REPORT(Field<Integer> minMonthlyPurchases, Field<BigDecimal> minDollarAmountPurchased) {
        return RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
    }

    /**
     * The table <code>public.sales_by_film_category</code>.
     */
    public final SalesByFilmCategory SALES_BY_FILM_CATEGORY = org.jooq.example.chart.db.tables.SalesByFilmCategory.SALES_BY_FILM_CATEGORY;

    /**
     * The table <code>public.sales_by_store</code>.
     */
    public final SalesByStore SALES_BY_STORE = org.jooq.example.chart.db.tables.SalesByStore.SALES_BY_STORE;

    /**
     * The table <code>public.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = org.jooq.example.chart.db.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>public.staff</code>.
     */
    public final Staff STAFF = org.jooq.example.chart.db.tables.Staff.STAFF;

    /**
     * The table <code>public.staff_list</code>.
     */
    public final StaffList STAFF_LIST = org.jooq.example.chart.db.tables.StaffList.STAFF_LIST;

    /**
     * The table <code>public.store</code>.
     */
    public final Store STORE = org.jooq.example.chart.db.tables.Store.STORE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ACTOR_ACTOR_ID_SEQ,
            Sequences.ADDRESS_ADDRESS_ID_SEQ,
            Sequences.CATEGORY_CATEGORY_ID_SEQ,
            Sequences.CITY_CITY_ID_SEQ,
            Sequences.COUNTRY_COUNTRY_ID_SEQ,
            Sequences.CUSTOMER_CUSTOMER_ID_SEQ,
            Sequences.FILM_FILM_ID_SEQ,
            Sequences.INVENTORY_INVENTORY_ID_SEQ,
            Sequences.LANGUAGE_LANGUAGE_ID_SEQ,
            Sequences.PAYMENT_PAYMENT_ID_SEQ,
            Sequences.RENTAL_RENTAL_ID_SEQ,
            Sequences.STAFF_STAFF_ID_SEQ,
            Sequences.STORE_STORE_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Actor.ACTOR,
            ActorInfo.ACTOR_INFO,
            Address.ADDRESS,
            Category.CATEGORY,
            City.CITY,
            Country.COUNTRY,
            Customer.CUSTOMER,
            CustomerList.CUSTOMER_LIST,
            Film.FILM,
            FilmActor.FILM_ACTOR,
            FilmCategory.FILM_CATEGORY,
            FilmInStock.FILM_IN_STOCK,
            FilmList.FILM_LIST,
            FilmNotInStock.FILM_NOT_IN_STOCK,
            Inventory.INVENTORY,
            Language.LANGUAGE,
            NicerButSlowerFilmList.NICER_BUT_SLOWER_FILM_LIST,
            Payment.PAYMENT,
            PaymentP2007_01.PAYMENT_P2007_01,
            PaymentP2007_02.PAYMENT_P2007_02,
            PaymentP2007_03.PAYMENT_P2007_03,
            PaymentP2007_04.PAYMENT_P2007_04,
            PaymentP2007_05.PAYMENT_P2007_05,
            PaymentP2007_06.PAYMENT_P2007_06,
            Rental.RENTAL,
            RewardsReport.REWARDS_REPORT,
            SalesByFilmCategory.SALES_BY_FILM_CATEGORY,
            SalesByStore.SALES_BY_STORE,
            SchemaVersion.SCHEMA_VERSION,
            Staff.STAFF,
            StaffList.STAFF_LIST,
            Store.STORE);
    }
}
